//
// CryptoSwift-Shared.xcconfig
//
// Generated by BuildSettingExtractor on 02/04/2018
// https://github.com/dempseyatgithub/BuildSettingExtractor
//


// Require Only App-Extension-Safe API
// 
// When enabled, this causes the compiler and linker to disallow use of APIs that are not
// available to app extensions and to disallow linking to frameworks that have not been
// built with this setting enabled.

APPLICATION_EXTENSION_API_ONLY = YES



// Compatibility Version
// 
// Determines the compatibility version of the resulting library, bundle, or framework
// binary. See [Dynamic Library Design
// Guidelines](https://developer.apple.com/library/content/documentation/DeveloperTools/Conceptual/DynamicLibraries/100-Articles/DynamicLibraryDesignGuidelines.html#//apple_ref/doc/uid/TP40002013-SW19)
// in [Dynamic Library Programming
// Topics](https://developer.apple.com/library/content/documentation/DeveloperTools/Conceptual/DynamicLibraries/000-Introduction/Introduction.html)
// for details on assigning version numbers of dynamic libraries.

DYLIB_COMPATIBILITY_VERSION = 1



// Current Library Version
// 
// This setting defines the current version of any framework built by the project. As
// with `CURRENT_PROJECT_VERSION`, the value must be an integer or floating point number,
// such as `57` or `365.8`. By default, it is set to `$(CURRENT_PROJECT_VERSION)`. See
// [Dynamic Library Design
// Guidelines](https://developer.apple.com/library/content/documentation/DeveloperTools/Conceptual/DynamicLibraries/100-Articles/DynamicLibraryDesignGuidelines.html#//apple_ref/doc/uid/TP40002013-SW19)
// in [Dynamic Library Programming
// Topics](https://developer.apple.com/library/content/documentation/DeveloperTools/Conceptual/DynamicLibraries/000-Introduction/Introduction.html)
// for details on assigning version numbers of dynamic libraries.

DYLIB_CURRENT_VERSION = 1



// Dynamic Library Install Name Base
// 
// Sets the base value for the internal `install path` (`LC_ID_DYLIB`) in a dynamic
// library. This will be combined with the `EXECUTABLE_PATH` to form the full install
// path. Setting `LD_DYLIB_INSTALL_NAME` directly will override this setting. This
// setting defaults to the target's `INSTALL_PATH`. It is ignored when building any
// product other than a dynamic library.

DYLIB_INSTALL_NAME_BASE = @rpath



// Enable Bitcode
// 
// Activating this setting indicates that the target or project should generate bitcode
// during compilation for platforms and architectures that support it. For Archive
// builds, bitcode will be generated in the linked binary for submission to the App
// Store. For other builds, the compiler and linker will check whether the code complies
// with the requirements for bitcode generation, but will not generate actual bitcode.

ENABLE_BITCODE = YES



// Enable Bitcode
// 
// Activating this setting indicates that the target or project should generate bitcode
// during compilation for platforms and architectures that support it. For Archive
// builds, bitcode will be generated in the linked binary for submission to the App
// Store. For other builds, the compiler and linker will check whether the code complies
// with the requirements for bitcode generation, but will not generate actual bitcode.

ENABLE_BITCODE[sdk=macosx*] = NO



// Installation Directory
// 
// The directory in which to install the build products. This path is prepended by the
// `DSTROOT`.

INSTALL_PATH = $(LOCAL_LIBRARY_DIR)/Frameworks


// Runpath Search Paths
// 
// This is a list of paths to be added to the `runpath` search path list for the image
// being created. At runtime, `dyld` uses the `runpath` when searching for dylibs whose
// load path begins with `@rpath/`. See [Dynamic Library Programming
// Topics](https://developer.apple.com/library/content/documentation/DeveloperTools/Conceptual/DynamicLibraries/000-Introduction/Introduction.html).

LD_RUNPATH_SEARCH_PATHS = $(inherited) @executable_path/Frameworks @loader_path/Frameworks

// Info.plist File
//
// The project-relative path to the property list file that contains the `Info.plist`
// information used by bundles. For details on information property list files, see
// [Information Property List
// Files](https://developer.apple.com/library/content/documentation/MacOSX/Conceptual/BPRuntimeConfig/Articles/ConfigFiles.html#//apple_ref/doc/uid/20002091-CJBJIEDH)
// in [Runtime Configuration
// Guidelines](https://developer.apple.com/library/content/documentation/MacOSX/Conceptual/BPRuntimeConfig/000-Introduction/introduction.html).

INFOPLIST_FILE = Sources/CryptoSwift/Info.plist

// Product Bundle Identifier
// 
// A string that uniquely identifies the bundle. The string should be in reverse DNS
// format using only alphanumeric characters (`A-Z`, `a-z`, `0-9`), the dot (`.`), and
// the hyphen (`-`). This value is used as the `CFBundleIdentifier` in the `Info.plist`
// of the built bundle.

PRODUCT_BUNDLE_IDENTIFIER = com.krzyzanowskim.${PRODUCT_NAME:rfc1034identifier}



// Product Name
// 
// This is the basename of the product generated by the target.

PRODUCT_NAME = $(TARGET_NAME)



// Skip Install
// 
// If enabled, don't install built products even if deployment locations are active.

SKIP_INSTALL = YES



// Swift Language Version
// 
// 

SWIFT_VERSION = 4.2



TVOS_DEPLOYMENT_TARGET = 9.0



WATCHOS_DEPLOYMENT_TARGET = 2.0
